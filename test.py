import streamlit as st

# ----------------------------
# 기본 설정
# ----------------------------
st.set_page_config(page_title="보건의료 웹앱", page_icon="🧑‍⚕️", layout="wide")
st.title("🧑‍⚕️ 전문 보건의료 웹앱")
st.write("""
⚠️ 본 앱은 의료 전문가의 진료를 대체하지 않습니다.  
정확한 진단이나 처치가 필요할 경우 반드시 병원 방문을 권장합니다.
""")

# ----------------------------
# 메뉴 선택
# ----------------------------
menu = st.sidebar.radio("메뉴 선택", ["홈", "자가진단", "운동 가이드", "약품 정보", "응급처치"])

# ----------------------------
# 홈
# ----------------------------
if menu == "홈":
    st.subheader("🏠 홈")
    st.write("""
본 앱은 자가 증상 확인, 재활 운동, 약품 정보, 응급처치 안내 등
건강 관리 보조 기능을 제공합니다.  
사용자의 안전과 정확한 진료를 위해 전문가 상담이 필수입니다.
""")

# ----------------------------
# 자가진단 + 추천 운동/약품 (개선 UI)
# ----------------------------
elif menu == "자가진단":
    st.subheader("🤒 자가진단 도구")
    st.write("현재 겪고 있는 증상을 선택하세요:")

    symptom = st.selectbox("증상 선택", [
        "선택 안 함", "두통", "기침", "복통", "발열", "피로감", "발목통증", "눈충혈"
    ])

    if symptom != "선택 안 함":
        st.write(f"선택한 증상: **{symptom}**")

        symptom_detail = {
            "두통": "...(생략: 이전 상세 내용 그대로)",  # 필요 시 전체 내용 유지
            "기침": "...",
            "복통": "...",
            "발열": "...",
            "피로감": "...",
            "발목통증": "...",
            "눈충혈": "..."
        }

        with st.expander("증상 상세 정보"):
            st.info(symptom_detail[symptom])

        symptom_exercise = {
            "두통": ["목 스트레칭", "어깨/목 근육 이완 운동", "가벼운 산책"],
            "기침": ["폐활량 늘리기 심호흡 운동", "가벼운 스트레칭"],
            "복통": ["복부 마사지", "복부 스트레칭", "요가 자세"],
            "발열": ["휴식 중심, 무리한 운동 금지"],
            "피로감": ["전신 스트레칭", "가벼운 걷기", "목/어깨 근육 풀기"],
            "발목통증": ["발목 돌리기", "발목 밴드 운동", "염좌 예방 운동"],
            "눈충혈": ["눈 깜박임 운동", "시선 좌우/상하 이동", "눈 피로 완화 스트레칭"]
        }

        with st.expander("추천 운동"):
            for ex in symptom_exercise[symptom]:
                st.write(f"- {ex}")

        symptom_drug = {
            "두통": ["타이레놀", "이부프로펜", "진통제"],
            "기침": ["진해거담제", "항히스타민제"],
            "복통": ["판토덱스", "소염제", "진통제"],
            "발열": ["타이레놀", "해열제"],
            "피로감": ["비타민제", "진정제"],
            "발목통증": ["이부프로펜", "소염제", "진통제"],
            "눈충혈": ["항히스타민제", "인공눈물"]
        }

        drug_info = {
            "타이레놀": {"효능": "해열, 진통", "부작용": "간 손상 위험 (과다 복용 시)"},
            "이부프로펜": {"효능": "진통, 항염", "부작용": "위장 장애, 어지러움"},
            "진통제": {"효능": "통증 완화", "부작용": "위장 장애, 어지러움"},
            "진해거담제": {"효능": "기침 완화", "부작용": "졸림, 어지러움"},
            "항히스타민제": {"효능": "알레르기 증상 완화", "부작용": "졸림, 구강 건조"},
            "판토덱스": {"효능": "위산 억제제", "부작용": "두통, 복통"},
            "소염제": {"효능": "염증 완화", "부작용": "위장 장애, 발진"},
            "해열제": {"효능": "발열 감소", "부작용": "위장 장애, 두통"},
            "비타민제": {"효능": "영양 보충", "부작용": "과다 섭취 시 위장장애"},
            "인공눈물": {"효능": "눈 건조 완화", "부작용": "일시적 눈 따가움"}
        }

        with st.expander("추천 약품"):
            cols = st.columns(3)
            for i, drug in enumerate(symptom_drug[symptom]):
                if cols[i % 3].button(drug):
                    info = drug_info[drug]
                    st.success(f"💊 {drug} 정보")
                    st.write(f"**효능:** {info['효능']}")
                    st.write(f"**부작용:** {info['부작용']}")

# ----------------------------
# 운동 가이드
# ----------------------------
elif menu == "운동 가이드":
    st.subheader("💪 재활 운동 가이드")
    exercise = st.selectbox("운동 부위 선택", ["어깨", "허리", "발목", "목"])

    exercise_guide = {
        "어깨": """
- 벽을 마주보고 손을 벽에 대고 천천히 위로 올립니다.
- 올린 후 2초 유지, 천천히 내리기
- 10회 반복, 하루 2~3세트
""",
        "허리": """
- 등을 바닥에 대고 무릎을 가슴 쪽으로 당겨 20초 유지
- 반대쪽도 동일 반복
- 5회 반복, 하루 2~3세트
""",
        "발목": """
- 앉은 자세에서 발목을 바깥/안쪽으로 돌리기 15회 반복
- 하루 2~3세트
""",
        "목": """
- 고개를 천천히 좌우로 기울이며 10초 유지
- 하루 2~3세트
"""
    }

    st.write(exercise_guide[exercise])

# ----------------------------
# 약품 정보
# ----------------------------
elif menu == "약품 정보":
    st.subheader("💊 약품 정보 (클릭하여 확인)")
    drug_info = {
        "타이레놀": {"효능": "해열, 진통", "부작용": "간 손상 위험 (과다 복용 시)"},
        "이부프로펜": {"효능": "진통, 항염", "부작용": "위장 장애, 어지러움"},
        "진통제": {"효능": "통증 완화", "부작용": "위장 장애, 어지러움"},
        "진해거담제": {"효능": "기침 완화", "부작용": "졸림, 어지러움"},
        "항히스타민제": {"효능": "알레르기 증상 완화", "부작용": "졸림, 구강 건조"},
        "판토덱스": {"효능": "위산 억제제", "부작용": "두통, 복통"},
        "소염제": {"효능": "염증 완화", "부작용": "위장 장애, 발진"},
        "해열제": {"효능": "발열 감소", "부작용": "위장 장애, 두통"},
        "비타민제": {"효능": "영양 보충", "부작용": "과다 섭취 시 위장장애"},
        "인공눈물": {"효능": "눈 건조 완화", "부작용": "일시적 눈 따가움"}
    }

    cols = st.columns(3)
    for i, drug in enumerate(drug_info.keys()):
        if cols[i % 3].button(drug):
            info = drug_info[drug]
            st.success(f"💊 {drug} 정보")
            st.write(f"**효능:** {info['효능']}")
            st.write(f"**부작용:** {info['부작용']}")

# ----------------------------
# 응급처치
# ----------------------------
elif menu == "응급처치":
    st.subheader("🚑 응급처치 가이드")
    emergency = st.selectbox("상황 선택", [
        "심정지", "화상", "골절", "출혈",
        "알레르기 반응", "식중독", "뇌졸중 의심", "심장마비 의심"
    ])

    emergency_guide = {
        "심정지": "...",  # 기존 내용 그대로
        "화상": "...",
        "골절": "...",
        "출혈": "...",
        "알레르기 반응": "...",
        "식중독": "...",
        "뇌졸중 의심": "...",
        "심장마비 의심": "..."
    }

    st.write(emergency_guide[emergency])
